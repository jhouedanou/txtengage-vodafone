name: Deploy to Server

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      env:
        NUXT_PUBLIC_API_URL: ${{ secrets.API_URL }}
        
    - name: Generate static files
      run: npm run generate
      
    - name: Create deployment package
      run: |
        tar -czf deployment.tar.gz \
          .output/ \
          assets/ \
          public/ \
          package*.json \
          nuxt.config.ts
          
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Cr√©er le dossier de backup avec timestamp
          BACKUP_DIR="/var/backups/vodafone-app/$(date +%Y%m%d_%H%M%S)"
          sudo mkdir -p $BACKUP_DIR
          
          # Backup de l'ancienne version
          if [ -d "/var/www/vodafone-app" ]; then
            sudo cp -r /var/www/vodafone-app/* $BACKUP_DIR/
            echo "Backup cr√©√© dans $BACKUP_DIR"
          fi
          
          # Arr√™ter l'application (si PM2 est utilis√©)
          pm2 stop vodafone-app || true
          
          # Nettoyer le dossier de destination
          sudo rm -rf /var/www/vodafone-app/*
          
    - name: Upload files to server
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        source: "deployment.tar.gz"
        target: "/tmp/"
        
    - name: Extract and configure on server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Extraire les fichiers
          cd /tmp
          sudo tar -xzf deployment.tar.gz -C /var/www/vodafone-app/
          
          # Configurer les permissions
          sudo chown -R www-data:www-data /var/www/vodafone-app
          sudo chmod -R 755 /var/www/vodafone-app
          
          # Installer les d√©pendances de production
          cd /var/www/vodafone-app
          npm ci --only=production
          
          # Red√©marrer l'application
          pm2 start ecosystem.config.js || pm2 restart vodafone-app
          
          # Nettoyer les fichiers temporaires
          rm -f /tmp/deployment.tar.gz
          
          # Configurer Nginx (si n√©cessaire)
          sudo nginx -t && sudo systemctl reload nginx
          
          echo "üöÄ D√©ploiement termin√© avec succ√®s!"
          
    - name: Health Check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # V√©rifier que l'application r√©pond
          sleep 10
          curl -f http://localhost:3000/health || curl -f http://localhost:3000/ || {
            echo "‚ùå Health check failed"
            # Rollback vers la derni√®re version
            LATEST_BACKUP=$(ls -t /var/backups/vodafone-app/ | head -n 1)
            if [ -n "$LATEST_BACKUP" ]; then
              echo "üîÑ Rollback vers $LATEST_BACKUP"
              sudo rm -rf /var/www/vodafone-app/*
              sudo cp -r /var/backups/vodafone-app/$LATEST_BACKUP/* /var/www/vodafone-app/
              pm2 restart vodafone-app
            fi
            exit 1
          }
          echo "‚úÖ Application accessible"
          
    - name: Cleanup old backups
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Garder seulement les 5 derniers backups
          cd /var/backups/vodafone-app/
          ls -t | tail -n +6 | xargs -r sudo rm -rf
          echo "üßπ Anciens backups supprim√©s"

    - name: Notify deployment status
      uses: appleboy/ssh-action@v1.0.0
      if: always()
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ D√©ploiement r√©ussi - $(date)"
            echo "üîÑ Custom scrollbar mise √† jour avec orientation responsive"
          else
            echo "‚ùå D√©ploiement √©chou√© - $(date)"
          fi

  # Job optionnel pour tests
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || true
      
    - name: Run tests
      run: npm run test || true
      
    - name: Build test
      run: npm run build
