name: Deploy to Vercel Static - txtengage

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Build Nuxt application for static deployment
      run: |
        npm run build
        npm run generate
      env:
        NODE_ENV: production
        NUXT_APP_BASE_URL: /txtengage/
        
    - name: Prepare Vercel static deployment structure
      run: |
        # Cr√©er la structure Vercel
        mkdir -p .vercel/static/txtengage
        
        # Copier les fichiers g√©n√©r√©s vers le bon dossier
        if [ -d ".output/public" ]; then
          cp -r .output/public/* .vercel/static/txtengage/
          echo "‚úÖ Fichiers copi√©s depuis .output/public"
        elif [ -d "dist" ]; then
          cp -r dist/* .vercel/static/txtengage/
          echo "‚úÖ Fichiers copi√©s depuis dist"
        else
          echo "‚ùå Aucun dossier de build trouv√©"
          exit 1
        fi
        
        # Copier les assets additionnels
        if [ -d "public" ]; then
          cp -r public/* .vercel/static/txtengage/
          echo "‚úÖ Assets publics copi√©s"
        fi
        
        # Cr√©er le fichier de configuration Vercel
        cat > vercel.json << EOF
        {
          "version": 2,
          "builds": [
            {
              "src": ".vercel/static/txtengage/**",
              "use": "@vercel/static"
            }
          ],
          "routes": [
            {
              "src": "/txtengage/(.*)",
              "dest": "/.vercel/static/txtengage/\$1"
            },
            {
              "src": "/txtengage",
              "dest": "/.vercel/static/txtengage/index.html"
            }
          ],
          "headers": [
            {
              "source": "/txtengage/(.*\\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp))",
              "headers": [
                {
                  "key": "Cache-Control",
                  "value": "public, max-age=31536000, immutable"
                }
              ]
            },
            {
              "source": "/txtengage/fonts/(.*)",
              "headers": [
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Cache-Control",
                  "value": "public, max-age=31536000"
                }
              ]
            }
          ]
        }
        EOF
        
        # Cr√©er un fichier de version pour le d√©ploiement
        echo "$(date '+%Y-%m-%d %H:%M:%S') - Commit: ${{ github.sha }}" > .vercel/static/txtengage/version.txt
        
        # V√©rification des fichiers critiques pour la scrollbar responsive
        if grep -r "max-width: 1024px" .vercel/static/txtengage/ 2>/dev/null; then
          echo "‚úÖ Configuration responsive de la scrollbar d√©tect√©e"
        else
          echo "‚ö†Ô∏è  Configuration responsive de la scrollbar non d√©tect√©e"
        fi
        
        # Lister les fichiers pour d√©bogage
        echo "üìÅ Structure du d√©ploiement:"
        find .vercel/static/txtengage -type f | head -20
        echo "üìä Nombre total de fichiers: $(find .vercel/static/txtengage -type f | wc -l)"
        
    - name: Deploy to FTP server (Vercel Static Structure)
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./.vercel/static/txtengage/
        server-dir: /public_html/.vercel/static/txtengage/
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/.nuxt/**
          **/.DS_Store
          **/Thumbs.db
          **/*.log
          **/src/**
          
    - name: Deploy Vercel configuration
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: /public_html/
        exclude: |
          **/*
          !vercel.json
          
    - name: Create symbolic links and configure server
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 22
        script: |
          # Cr√©er les liens symboliques pour l'acc√®s direct
          cd /public_html
          
          # Supprimer l'ancien lien s'il existe
          rm -f txtengage
          
          # Cr√©er un nouveau lien symbolique vers le dossier Vercel
          ln -s .vercel/static/txtengage txtengage
          
          # V√©rifier que le lien fonctionne
          if [ -L "txtengage" ] && [ -e "txtengage" ]; then
            echo "‚úÖ Lien symbolique cr√©√© avec succ√®s"
            ls -la txtengage/ | head -5
          else
            echo "‚ùå Erreur dans la cr√©ation du lien symbolique"
          fi
          
          # Configurer les permissions
          find .vercel/static/txtengage -type f -exec chmod 644 {} \; 2>/dev/null || true
          find .vercel/static/txtengage -type d -exec chmod 755 {} \; 2>/dev/null || true
          
          echo "üöÄ Configuration serveur termin√©e"

    - name: Update .htaccess for Vercel Static compatibility
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 22
        script: |
          # Cr√©er/Mettre √† jour le .htaccess pour txtengage
          cat > /public_html/.vercel/static/txtengage/.htaccess << 'EOF'
          # Configuration pour Vodafone TxtEngage - Scrollbar Responsive
          
          # Compression GZIP
          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/plain text/html text/xml text/css text/javascript
              AddOutputFilterByType DEFLATE application/xml application/xhtml+xml application/rss+xml
              AddOutputFilterByType DEFLATE application/javascript application/x-javascript application/json
          </IfModule>
          
          # Cache des fichiers statiques
          <IfModule mod_expires.c>
              ExpiresActive On
              ExpiresByType image/jpg "access plus 1 year"
              ExpiresByType image/jpeg "access plus 1 year"
              ExpiresByType image/gif "access plus 1 year"
              ExpiresByType image/png "access plus 1 year"
              ExpiresByType image/svg+xml "access plus 1 year"
              ExpiresByType image/webp "access plus 1 year"
              ExpiresByType font/ttf "access plus 1 year"
              ExpiresByType font/woff "access plus 1 year"
              ExpiresByType font/woff2 "access plus 1 year"
              ExpiresByType text/css "access plus 1 month"
              ExpiresByType application/javascript "access plus 1 month"
              ExpiresByType text/html "access plus 1 hour"
          </IfModule>
          
          # Headers pour la scrollbar responsive et assets
          <IfModule mod_headers.c>
              Header always set X-Frame-Options "SAMEORIGIN"
              Header always set X-XSS-Protection "1; mode=block"
              Header always set X-Content-Type-Options "nosniff"
              
              # CORS pour les fonts Vodafone
              <FilesMatch "\.(ttf|otf|eot|woff|woff2)$">
                  Header set Access-Control-Allow-Origin "*"
              </FilesMatch>
              
              # Cache pour assets statiques
              <FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$">
                  Header set Cache-Control "public, max-age=31536000"
              </FilesMatch>
          </IfModule>
          
          # Redirections pour SPA Vue/Nuxt
          <IfModule mod_rewrite.c>
              RewriteEngine On
              RewriteBase /txtengage/
              
              # Ne pas r√©√©crire les fichiers existants
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              
              # Rediriger vers index.html pour les routes SPA
              RewriteRule . /txtengage/index.html [L]
          </IfModule>
          
          # Types MIME pour fonts Vodafone
          <IfModule mod_mime.c>
              AddType application/font-woff .woff
              AddType application/font-woff2 .woff2
              AddType application/vnd.ms-fontobject .eot
              AddType font/ttf .ttf
              AddType font/opentype .otf
          </IfModule>
          
          # Protection des fichiers sensibles
          <Files "*.env">
              Order allow,deny
              Deny from all
          </Files>
          EOF
          
          echo "‚úÖ .htaccess configur√© pour txtengage"

    - name: Verify deployment and test scrollbar functionality
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.FTP_HOST }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 22
        script: |
          echo "üîç V√©rification du d√©ploiement..."
          
          # V√©rifier la structure des fichiers
          if [ -f "/public_html/.vercel/static/txtengage/index.html" ]; then
            echo "‚úÖ Index.html trouv√©"
          else
            echo "‚ùå Index.html manquant"
          fi
          
          # V√©rifier les assets CSS pour la scrollbar
          if find /public_html/.vercel/static/txtengage -name "*.css" -exec grep -l "simple-scrollbar" {} \; | head -1; then
            echo "‚úÖ Styles de scrollbar trouv√©s dans CSS"
          else
            echo "‚ö†Ô∏è  Styles de scrollbar non trouv√©s"
          fi
          
          # V√©rifier la configuration responsive
          if find /public_html/.vercel/static/txtengage -name "*.css" -exec grep -l "max-width: 1024px" {} \; | head -1; then
            echo "‚úÖ Configuration responsive d√©tect√©e"
          else
            echo "‚ö†Ô∏è  Configuration responsive non d√©tect√©e"
          fi
          
          # V√©rifier les fonts Vodafone
          if find /public_html/.vercel/static/txtengage -name "*.ttf" -o -name "*.woff*" | head -1; then
            echo "‚úÖ Fonts Vodafone trouv√©es"
          else
            echo "‚ö†Ô∏è  Fonts Vodafone non trouv√©es"
          fi
          
          # Afficher la taille du d√©ploiement
          DEPLOY_SIZE=$(du -sh /public_html/.vercel/static/txtengage 2>/dev/null | cut -f1)
          echo "üìä Taille du d√©ploiement: $DEPLOY_SIZE"
          
          # Statistiques des fichiers
          echo "üìà Statistiques:"
          echo "   - Fichiers HTML: $(find /public_html/.vercel/static/txtengage -name "*.html" | wc -l)"
          echo "   - Fichiers CSS: $(find /public_html/.vercel/static/txtengage -name "*.css" | wc -l)"
          echo "   - Fichiers JS: $(find /public_html/.vercel/static/txtengage -name "*.js" | wc -l)"
          echo "   - Images: $(find /public_html/.vercel/static/txtengage -name "*.png" -o -name "*.jpg" -o -name "*.webp" -o -name "*.svg" | wc -l)"
          
          echo "üéØ D√©ploiement Vercel Static termin√©!"
          echo "üåê URL d'acc√®s: https://votre-domaine.com/txtengage/"

  # Job optionnel pour les tests en mode mobile
  test-responsive:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Test build
      run: |
        npm run build
        npm run generate
        
    - name: Test responsive scrollbar configuration
      run: |
        echo "üß™ Test de la configuration responsive..."
        
        # V√©rifier que les fichiers contiennent la logique responsive
        if find . -name "*.vue" -exec grep -l "max-width.*1024" {} \;; then
          echo "‚úÖ Configuration responsive trouv√©e dans Vue"
        fi
        
        if find . -name "*.scss" -exec grep -l "simple-scrollbar" {} \;; then
          echo "‚úÖ Styles scrollbar trouv√©s dans SCSS"
        fi
        
        if find . -name "*.vue" -exec grep -l "isMobileMode" {} \;; then
          echo "‚úÖ Logique mobile d√©tect√©e"
        fi
        
        echo "üéØ Tests termin√©s"

  # Job de notification
  notify:
    runs-on: ubuntu-latest
    needs: [build-and-deploy]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.build-and-deploy.result }}" == "success" ]; then
          echo "üéâ D√©ploiement Vercel Static r√©ussi!"
          echo "üìÇ Structure: .vercel/static/txtengage/"
          echo "üåê URL: https://votre-domaine.com/txtengage/"
          echo "üì± Scrollbar responsive:"
          echo "   - Desktop: Verticale √† droite"
          echo "   - Mobile (<1024px): Horizontale en bas"
          echo "üîó Lien symbolique: /txtengage -> /.vercel/static/txtengage"
        else
          echo "‚ùå D√©ploiement √©chou√©"
          echo "üìù V√©rifiez les logs pour plus de d√©tails"
        fi
